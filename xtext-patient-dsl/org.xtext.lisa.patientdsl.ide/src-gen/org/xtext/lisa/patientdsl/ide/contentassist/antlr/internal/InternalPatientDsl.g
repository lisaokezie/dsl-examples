/*
 * generated by Xtext 2.33.0
 */
grammar InternalPatientDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.lisa.patientdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.lisa.patientdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.lisa.patientdsl.services.PatientDslGrammarAccess;

}
@parser::members {
	private PatientDslGrammarAccess grammarAccess;

	public void setGrammarAccess(PatientDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getPatientsAssignment()); }
		(rule__Model__PatientsAssignment)*
		{ after(grammarAccess.getModelAccess().getPatientsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatient
entryRulePatient
:
{ before(grammarAccess.getPatientRule()); }
	 rulePatient
{ after(grammarAccess.getPatientRule()); } 
	 EOF 
;

// Rule Patient
rulePatient 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatientAccess().getGroup()); }
		(rule__Patient__Group__0)
		{ after(grammarAccess.getPatientAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule InsuranceType
ruleInsuranceType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsuranceTypeAccess().getAlternatives()); }
		(rule__InsuranceType__Alternatives)
		{ after(grammarAccess.getInsuranceTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InsuranceType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsuranceTypeAccess().getPRIVATEEnumLiteralDeclaration_0()); }
		('private')
		{ after(grammarAccess.getInsuranceTypeAccess().getPRIVATEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getInsuranceTypeAccess().getCOMPULSORYEnumLiteralDeclaration_1()); }
		('compulsory')
		{ after(grammarAccess.getInsuranceTypeAccess().getCOMPULSORYEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__0__Impl
	rule__Patient__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getPatientKeyword_0()); }
	'patient'
	{ after(grammarAccess.getPatientAccess().getPatientKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__1__Impl
	rule__Patient__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getNameAssignment_1()); }
	(rule__Patient__NameAssignment_1)
	{ after(grammarAccess.getPatientAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__2__Impl
	rule__Patient__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getInsuranceTypeKeyword_2()); }
	'insuranceType'
	{ after(grammarAccess.getPatientAccess().getInsuranceTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__3__Impl
	rule__Patient__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getInsuranceTypeAssignment_3()); }
	(rule__Patient__InsuranceTypeAssignment_3)
	{ after(grammarAccess.getPatientAccess().getInsuranceTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__4__Impl
	rule__Patient__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getInsuranceNumberKeyword_4()); }
	'insuranceNumber'
	{ after(grammarAccess.getPatientAccess().getInsuranceNumberKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__5__Impl
	rule__Patient__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getInsuranceNumberAssignment_5()); }
	(rule__Patient__InsuranceNumberAssignment_5)
	{ after(grammarAccess.getPatientAccess().getInsuranceNumberAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__6__Impl
	rule__Patient__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getGroup_6()); }
	(rule__Patient__Group_6__0)?
	{ after(grammarAccess.getPatientAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getGroup_7()); }
	(rule__Patient__Group_7__0)?
	{ after(grammarAccess.getPatientAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Patient__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group_6__0__Impl
	rule__Patient__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getEmailKeyword_6_0()); }
	'email'
	{ after(grammarAccess.getPatientAccess().getEmailKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getEmailAssignment_6_1()); }
	(rule__Patient__EmailAssignment_6_1)
	{ after(grammarAccess.getPatientAccess().getEmailAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Patient__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group_7__0__Impl
	rule__Patient__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getPhoneNumberKeyword_7_0()); }
	'phoneNumber'
	{ after(grammarAccess.getPatientAccess().getPhoneNumberKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Patient__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatientAccess().getPhoneNumberAssignment_7_1()); }
	(rule__Patient__PhoneNumberAssignment_7_1)
	{ after(grammarAccess.getPatientAccess().getPhoneNumberAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PatientsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPatientsPatientParserRuleCall_0()); }
		rulePatient
		{ after(grammarAccess.getModelAccess().getPatientsPatientParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatientAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPatientAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__InsuranceTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatientAccess().getInsuranceTypeInsuranceTypeEnumRuleCall_3_0()); }
		ruleInsuranceType
		{ after(grammarAccess.getPatientAccess().getInsuranceTypeInsuranceTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__InsuranceNumberAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatientAccess().getInsuranceNumberINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getPatientAccess().getInsuranceNumberINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__EmailAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatientAccess().getEmailEMAILTerminalRuleCall_6_1_0()); }
		RULE_EMAIL
		{ after(grammarAccess.getPatientAccess().getEmailEMAILTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Patient__PhoneNumberAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatientAccess().getPhoneNumberSTRINGTerminalRuleCall_7_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPatientAccess().getPhoneNumberSTRINGTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_EMAIL : RULE_ID '@' RULE_ID '.' RULE_ID;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
